.TH "emthp::Parser" 3 "Wed Mar 1 2023" "EMath++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
emthp::Parser \- Class that wraps a std::string and parses it as a Monomial or as a Polynomial\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <eparser\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParser\fP (const std::string &input) noexcept"
.br
.RI "Standalone constructor for the \fBParser\fP class\&. "
.ti -1c
.RI "\fBParser\fP & \fBoperator=\fP (const \fBParser\fP &ogn) noexcept"
.br
.RI "Assigment operator for when called with an lvalue\&. "
.ti -1c
.RI "\fBemth::Polynomial\fP \fBparse_polynomial\fP () noexcept"
.br
.RI "Function that parses the input as a Polynomial\&. "
.ti -1c
.RI "\fBemth::Monomial\fP \fBparse_monomial\fP () noexcept"
.br
.RI "Function that parses the next Monomial in the input\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class that wraps a std::string and parses it as a Monomial or as a Polynomial\&. 

The class consists of two public functions, one for parsing the entire input as a Polynomial and the other for parsing only the next Monomial\&. 
.PP
Definition at line \fB125\fP of file \fBeparser\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "emthp::Parser::Parser (const std::string & input)\fC [noexcept]\fP"

.PP
Standalone constructor for the \fBParser\fP class\&. 
.PP
\fBParameters\fP
.RS 4
\fIinput\fP A const reference to the std::string to parse when needed\&. 
.RE
.PP

.PP
Definition at line \fB94\fP of file \fBeparser\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBemthp::Parser\fP & emthp::Parser::operator= (const \fBParser\fP & ogn)\fC [noexcept]\fP"

.PP
Assigment operator for when called with an lvalue\&. 
.PP
\fBParameters\fP
.RS 4
\fIogn\fP The lvalue \fBParser\fP object\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(\fBParser\fP&) A reference to the lvalue of the operation 
.RE
.PP

.PP
Definition at line \fB100\fP of file \fBeparser\&.cpp\fP\&.
.SS "\fBemth::Monomial\fP emthp::Parser::parse_monomial ()\fC [noexcept]\fP"

.PP
Function that parses the next Monomial in the input\&. 
.PP
\fBReturns\fP
.RS 4
(\fBemth::Monomial\fP) The next Monomial in the input 
.RE
.PP

.PP
Definition at line \fB113\fP of file \fBeparser\&.cpp\fP\&.
.PP
References \fBemth::Monomial::set_coeff()\fP, \fBemth::Monomial::set_degree()\fP, \fBemthp::T_EOF\fP, \fBemthp::T_EXPONENT\fP, \fBemthp::T_MINUS\fP, \fBemthp::T_NUMBER\fP, \fBemthp::T_PLUS\fP, \fBemthp::T_VARIABLE\fP, and \fBemthp::Token::type\fP\&.
.SS "\fBemth::Polynomial\fP emthp::Parser::parse_polynomial ()\fC [noexcept]\fP"

.PP
Function that parses the input as a Polynomial\&. 
.PP
\fBReturns\fP
.RS 4
(\fBemth::Polynomial\fP) The input as a Polynomial 
.RE
.PP

.PP
Definition at line \fB105\fP of file \fBeparser\&.cpp\fP\&.
.PP
References \fBemth::Polynomial::push_monomial()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for EMath++ from the source code\&.
