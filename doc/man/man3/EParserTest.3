.TH "EParserTest" 3 "Tue Feb 28 2023" "EMath++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EParserTest \- Class that provides a test fixture for the test cases\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits testing::Test\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEParserTest\fP ()"
.br
.RI "Standalone constructor for the \fBEParserTest\fP class\&. "
.ti -1c
.RI "void \fBset_input\fP (const std::string &input)"
.br
.RI "Function for setting the input to the lexer and parser objects\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBemthp::Lexer\fP \fBlexer\fP"
.br
.RI "The lexer object on which to perform the tests on\&. "
.ti -1c
.RI "\fBemthp::Parser\fP \fBparser\fP"
.br
.RI "The parser object on which to perform the tests on\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class that provides a test fixture for the test cases\&. 
.PP
Definition at line \fB14\fP of file \fBeparser\&.cpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "EParserTest::EParserTest ()\fC [inline]\fP"

.PP
Standalone constructor for the \fBEParserTest\fP class\&. Initializes the lexer and parser object with empty inputs\&. 
.PP
Definition at line \fB20\fP of file \fBeparser\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void EParserTest::set_input (const std::string & input)\fC [inline]\fP"

.PP
Function for setting the input to the lexer and parser objects\&. 
.PP
\fBParameters\fP
.RS 4
\fIinput\fP The std::string to set as input 
.RE
.PP

.PP
Definition at line \fB25\fP of file \fBeparser\&.cpp\fP\&.
.PP
References \fBlexer\fP, and \fBparser\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBemthp::Lexer\fP EParserTest::lexer\fC [protected]\fP"

.PP
The lexer object on which to perform the tests on\&. 
.PP
Definition at line \fB33\fP of file \fBeparser\&.cpp\fP\&.
.SS "\fBemthp::Parser\fP EParserTest::parser\fC [protected]\fP"

.PP
The parser object on which to perform the tests on\&. 
.PP
Definition at line \fB37\fP of file \fBeparser\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for EMath++ from the source code\&.
