<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="test" kind="page">
    <compoundname>test</compoundname>
    <title>Testing</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1adb859937dfb6fcd56c656c3c2555afc9" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Lexer)</term></varlistentry>
<listitem><para><anchor id="test_1_test000001"/>Test lexer functionality with simple expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1a9d00584eda85ad91bd3b865309697a92" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, CompoundLexer)</term></varlistentry>
<listitem><para><anchor id="test_1_test000002"/>Test lexer functionality with compund expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1a9bae16de43d72897f903e5977107c60a" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, ArithmeticLexer)</term></varlistentry>
<listitem><para><anchor id="test_1_test000003"/>Test lexer functionality with arithmetic expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1a7ed288e238950900345be1751b543ab5" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Variables)</term></varlistentry>
<listitem><para><anchor id="test_1_test000004"/>Test parser functionality with monomial expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1a21f8c875c668e6dc3d1a1423cdba58a3" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Compound)</term></varlistentry>
<listitem><para><anchor id="test_1_test000005"/>Test parser functionality with polynomial expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1aee28f89b9e4ebad2361a1f87e5068314" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Signs)</term></varlistentry>
<listitem><para><anchor id="test_1_test000006"/>Test parser functionality with sign expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1a8178a3e2dd566ffdd7520265ce0c2fe3" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Noise)</term></varlistentry>
<listitem><para><anchor id="test_1_test000007"/>Test parser functionality with noise in the expressions  </para>
</listitem>
<varlistentry><term>Member <ref refid="test_2eparser_8cpp_1aeed0ae0397e5f82225fde1a6ba4f65a9" kindref="member">TEST_F</ref>  (<ref refid="classEParserTest" kindref="compound">EParserTest</ref>, Edge)</term></varlistentry>
<listitem><para><anchor id="test_1_test000008"/>Test parser edge cases </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="test"/>
  </compounddef>
</doxygen>
