<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classEParserTest" kind="class" language="C++" prot="public">
    <compoundname>EParserTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">testing::Test</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classEParserTest_1a84cd16fd9d2f4b968c36ec280b7a7423" prot="protected" static="no" mutable="no">
        <type><ref refid="classemthp_1_1Lexer" kindref="compound">emthp::Lexer</ref></type>
        <definition>emthp::Lexer EParserTest::lexer</definition>
        <argsstring></argsstring>
        <name>lexer</name>
        <qualifiedname>EParserTest::lexer</qualifiedname>
        <briefdescription>
<para>The lexer object on which to perform the tests on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/eparser.cpp" line="33" column="22" bodyfile="test/eparser.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEParserTest_1a272d2e82239321467bce8dacd326bf6f" prot="protected" static="no" mutable="no">
        <type><ref refid="classemthp_1_1Parser" kindref="compound">emthp::Parser</ref></type>
        <definition>emthp::Parser EParserTest::parser</definition>
        <argsstring></argsstring>
        <name>parser</name>
        <qualifiedname>EParserTest::parser</qualifiedname>
        <briefdescription>
<para>The parser object on which to perform the tests on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/eparser.cpp" line="37" column="23" bodyfile="test/eparser.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEParserTest_1abcb56f6fe9d5fd3ca9320b5f981bc52c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EParserTest::EParserTest</definition>
        <argsstring>()</argsstring>
        <name>EParserTest</name>
        <qualifiedname>EParserTest::EParserTest</qualifiedname>
        <briefdescription>
<para>Standalone constructor for the <ref refid="classEParserTest" kindref="compound">EParserTest</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the lexer and parser object with empty inputs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/eparser.cpp" line="20" column="9" bodyfile="test/eparser.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classEParserTest_1a3f86e942a3c31352d1a6019e22fabe14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EParserTest::set_input</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>set_input</name>
        <qualifiedname>EParserTest::set_input</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function for setting the input to the lexer and parser objects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The std::string to set as input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/eparser.cpp" line="25" column="14" bodyfile="test/eparser.cpp" bodystart="25" bodyend="28"/>
        <references refid="classEParserTest_1a84cd16fd9d2f4b968c36ec280b7a7423" compoundref="test_2eparser_8cpp" startline="33">lexer</references>
        <references refid="classEParserTest_1a272d2e82239321467bce8dacd326bf6f" compoundref="test_2eparser_8cpp" startline="37">parser</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that provides a test fixture for the test cases. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>EParserTest</label>
        <link refid="classEParserTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::Test</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>EParserTest</label>
        <link refid="classEParserTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lexer</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>parser</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>emthp::Lexer</label>
        <link refid="classemthp_1_1Lexer"/>
      </node>
      <node id="4">
        <label>emthp::Parser</label>
        <link refid="classemthp_1_1Parser"/>
      </node>
      <node id="2">
        <label>testing::Test</label>
      </node>
    </collaborationgraph>
    <location file="test/eparser.cpp" line="14" column="1" bodyfile="test/eparser.cpp" bodystart="14" bodyend="38"/>
    <listofallmembers>
      <member refid="classEParserTest_1abcb56f6fe9d5fd3ca9320b5f981bc52c" prot="public" virt="non-virtual"><scope>EParserTest</scope><name>EParserTest</name></member>
      <member refid="classEParserTest_1a84cd16fd9d2f4b968c36ec280b7a7423" prot="protected" virt="non-virtual"><scope>EParserTest</scope><name>lexer</name></member>
      <member refid="classEParserTest_1a272d2e82239321467bce8dacd326bf6f" prot="protected" virt="non-virtual"><scope>EParserTest</scope><name>parser</name></member>
      <member refid="classEParserTest_1a3f86e942a3c31352d1a6019e22fabe14" prot="public" virt="non-virtual"><scope>EParserTest</scope><name>set_input</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
