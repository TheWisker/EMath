<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classefc_1_1Parser" xml:lang="en-US">
<title>efc::Parser Class Reference</title>
<indexterm><primary>efc::Parser</primary></indexterm>
<para>

<para>Class that wraps a std::string and parses it as a number or as a operation. </para>
 
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classefc_1_1Parser_1ad95836dabb6525baf080aa8d0fdb3b56">Parser</link> (const std::string &amp;input) noexcept</para>

<para>Standalone constructor for the <link linkend="_classefc_1_1Parser">Parser</link> class. </para>
</listitem>
            <listitem><para>const int <link linkend="_classefc_1_1Parser_1ad801320ff4014bb3e2822a2b56dc246e">parse_number</link> () noexcept</para>

<para>Function for parsing a plus, minus and number Tokens as a positive or negative int. </para>
</listitem>
            <listitem><para>const <link linkend="_classemth_1_1Polynomial">emth::Polynomial</link> <link linkend="_classefc_1_1Parser_1aa3007aab2177728edcfba4c0e4bb460f">parse_operation</link> (const ::std::vector&lt; <link linkend="_classemth_1_1Polynomial">emth::Polynomial</link> &gt; &amp;ps)</para>

<para>Function for parsing std::string as a mathematical operation consisting of Polynomials represented as integers. </para>
</listitem>
            <listitem><para><anchor xml:id="_classefc_1_1Parser_1a56a3102383a805ae6e3ed858f3efbfe1"/><emphasis role="strong">~Parser</emphasis> () noexcept=default</para>

<para>Default destructor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Class that wraps a std::string and parses it as a number or as a operation. </para>



<para>The class consists of two public functions, one for parsing the entire input as a number and the other for it as a operation. </para>
<para>
Definition at line <link linkend="_interface_8cpp_source_1l00753">753</link> of file <link linkend="_interface_8cpp_source">interface.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classefc_1_1Parser_1ad95836dabb6525baf080aa8d0fdb3b56"/><section>
    <title>Parser()</title>
<indexterm><primary>Parser</primary><secondary>efc::Parser</secondary></indexterm>
<indexterm><primary>efc::Parser</primary><secondary>Parser</secondary></indexterm>
<para><computeroutput>efc::Parser::Parser (const std::string &amp; input)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Standalone constructor for the <link linkend="_classefc_1_1Parser">Parser</link> class. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>input</entry><entry>
<para>A const reference to the std::string to parse when needed. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_interface_8cpp_source_1l00764">764</link> of file <link linkend="_interface_8cpp_source">interface.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classefc_1_1Parser_1ad801320ff4014bb3e2822a2b56dc246e"/><section>
    <title>parse_number()</title>
<indexterm><primary>parse_number</primary><secondary>efc::Parser</secondary></indexterm>
<indexterm><primary>efc::Parser</primary><secondary>parse_number</secondary></indexterm>
<para><computeroutput>const int efc::Parser::parse_number ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Function for parsing a plus, minus and number Tokens as a positive or negative int. </para>
</para>

<para><formalpara><title>Returns</title>

<para>(int) The parsed number </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_interface_8cpp_source_1l00769">769</link> of file <link linkend="_interface_8cpp_source">interface.cpp</link>.</para>
<para>
References <link linkend="_interface_8cpp_source_1l00733">efc::Lexer::next()</link>, <link linkend="_interface_8cpp_source_1l00678">efc::Token::type</link>, and <link linkend="_structefc_1_1Token_1ad5ee17926cf07cb994367a0d86717248">efc::Token::value</link>.</para>
</section>
<anchor xml:id="_classefc_1_1Parser_1aa3007aab2177728edcfba4c0e4bb460f"/><section>
    <title>parse_operation()</title>
<indexterm><primary>parse_operation</primary><secondary>efc::Parser</secondary></indexterm>
<indexterm><primary>efc::Parser</primary><secondary>parse_operation</secondary></indexterm>
<para><computeroutput>const <link linkend="_classemth_1_1Polynomial">emth::Polynomial</link> efc::Parser::parse_operation (const ::std::vector&lt; <link linkend="_classemth_1_1Polynomial">emth::Polynomial</link> &gt; &amp; ps)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Function for parsing std::string as a mathematical operation consisting of Polynomials represented as integers. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ps</entry><entry>
<para>A std::vector of Polynomials, the integers representing the Polynomials map to this std::vector indexes </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>(<link linkend="_classemth_1_1Polynomial">emth::Polynomial</link>) The parsed polynomial resulting of the operation </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_interface_8cpp_source_1l00786">786</link> of file <link linkend="_interface_8cpp_source">interface.cpp</link>.</para>
<para>
References <link linkend="_interface_8cpp_source_1l00733">efc::Lexer::next()</link>, <link linkend="_interface_8cpp_source_1l00678">efc::Token::type</link>, and <link linkend="_structefc_1_1Token_1ad5ee17926cf07cb994367a0d86717248">efc::Token::value</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/<link linkend="_interface_8cpp">interface.cpp</link></section>
</section>
